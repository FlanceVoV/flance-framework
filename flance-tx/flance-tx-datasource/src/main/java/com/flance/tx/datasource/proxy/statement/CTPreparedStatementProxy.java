package com.flance.tx.datasource.proxy.statement;

import com.flance.tx.datasource.proxy.connection.AbstractConnectionProxy;
import lombok.extern.slf4j.Slf4j;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;

/**
 * CT 模式 preparedStatement 代理
 * @author jhf
 */
@Slf4j
public class CTPreparedStatementProxy extends PreparedStatementProxy {


    public CTPreparedStatementProxy(AbstractConnectionProxy connectionProxy, PreparedStatement targetStatement, String execSql) throws SQLException {
        super(connectionProxy, targetStatement, execSql);
    }

    @Override
    public ResultSet executeQuery() throws SQLException {
        return super.executeQuery();
    }

    @Override
    public int executeUpdate() throws SQLException {
        return super.executeUpdate();
    }

    @Override
    public boolean execute() throws SQLException {
        log.info("CT 模式 sql 执行 [{}]", execSql);
        return true;
    }

    @Override
    public int executeUpdate(String sql, int autoGeneratedKeys) throws SQLException {
        return super.executeUpdate(sql, autoGeneratedKeys);
    }

    @Override
    public int executeUpdate(String sql, int[] columnIndexes) throws SQLException {
        return super.executeUpdate(sql, columnIndexes);
    }

    @Override
    public int executeUpdate(String sql, String[] columnNames) throws SQLException {
        return super.executeUpdate(sql, columnNames);
    }

    @Override
    public boolean execute(String sql, int autoGeneratedKeys) throws SQLException {
        return super.execute(sql, autoGeneratedKeys);
    }

    @Override
    public boolean execute(String sql, int[] columnIndexes) throws SQLException {
        return super.execute(sql, columnIndexes);
    }

    @Override
    public boolean execute(String sql, String[] columnNames) throws SQLException {
        return super.execute(sql, columnNames);
    }

    @Override
    public ResultSetMetaData getMetaData() throws SQLException {
        return super.getMetaData();
    }
}
